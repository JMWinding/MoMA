function weights = GetCEWeights(note)
if note >= 0 && note < 99
    % for the same molecule, normalize CIR in CE
elseif note >= 100 && note < 199
    % for the same molecule, simply average CIR in CE
    note = note-100;
elseif note >= 200 && note < 299
    % same as 1xx, but use sum CE
    note = note-200;
elseif note >= 300 && note < 399
    % backup1
    % use iterative channel estimation results in PD
    % 1.25s hPre and 2.00s hPost
    note = note-300;
end
    
switch note
    case 0
        weights = struct( ...
            "pos", 0, ...
            "posy", 0, ...
            "simTx", 10, ...
            "simMo", 0, ...
            "smth", 1, ...
            "cntr", 1);
    case 1 % original os
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 1, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 1);
    case 2
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 10, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 1);
    case 3
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 10, ...
            "simMo", 0, ...
            "smth", 1, ...
            "cntr", 0);
    case 4
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 10, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 0);
    case 5
        weights = struct( ...
            "pos", 0, ...
            "posy", 0, ...
            "simTx", 1, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 1);
    case 6
        weights = struct( ...
            "pos", 0, ...
            "posy", 0, ...
            "simTx", 10, ...
            "simMo", 0, ...
            "smth", 1, ...
            "cntr", 0);
    case 7
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 10, ...
            "simMo", 0, ...
            "smth", 1, ...
            "cntr", 1);
    case 8
        weights = struct( ...
            "pos", 0, ...
            "posy", 0, ...
            "simTx", 10, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 1);
    case 9
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 0, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 1);
    case 10
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 0, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 0);
    case 11
        weights = struct( ...
            "pos", 0, ...
            "posy", 0, ...
            "simTx", 0, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 1);
    case 12
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 1, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 0);
case 13
        weights = struct( ...
            "pos", 1, ...
            "posy", 1, ...
            "simTx", 1, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 1);
    case 14
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 1, ...
            "simMo", 0, ...
            "smth", 1, ...
            "cntr", 1);
    case 15
        weights = struct( ...
            "pos", 1, ...
            "posy", 1, ...
            "simTx", 1, ...
            "simMo", 0, ...
            "smth", 1, ...
            "cntr", 1);
    case 16
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 0, ...
            "simMo", 0, ...
            "smth", 1, ...
            "cntr", 1);
    case 17
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 1, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 10);
    case 18
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 1, ...
            "simMo", 0, ...
            "smth", 1, ...
            "cntr", 10);
    case 19
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 1, ...
            "simMo", 0, ...
            "smth", 10, ...
            "cntr", 10);
    case 21
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 2, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 1);
    case 22
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 5, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 1);
    case 23
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 0.5, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 1);
    case 24
        weights = struct( ...
            "pos", 1, ...
            "posy", 0, ...
            "simTx", 0.2, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 1);
    case 25
        weights = struct( ...
            "pos", 0.8, ...
            "posy", 0, ...
            "simTx", 0.8, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 0.8);
    case 30
        weights = struct( ...
            "pos", 0.1, ...
            "posy", 0, ...
            "simTx", 0.1, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 0.1);
    case 31
        weights = struct( ...
            "pos", 0, ...
            "posy", 0, ...
            "simTx", 0.1, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 0.1);
    case 32
        weights = struct( ...
            "pos", 0.1, ...
            "posy", 0, ...
            "simTx", 0.1, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 0);
    case 33
        weights = struct( ...
            "pos", 0.1, ...
            "posy", 0, ...
            "simTx", 0, ...
            "simMo", 0, ...
            "smth", 0, ...
            "cntr", 0.1);
end

if note >= 0 && note < 99
    weights.afloss = "mean";
elseif note >= 100 && note < 199
    % for the same molecule, simply average CIR in CE
    weights.afloss = "mean";
elseif note >= 200 && note < 299
    % same as 1xx, but use sum CE
    weights.afloss = "sum";
end
end